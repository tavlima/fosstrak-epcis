<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app 
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" 
    "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>


  <display-name>EPCIS Repository</display-name>
  <description>
    TODO description ...
    Through the EPCIS Capture Interface an EPCIS Capture Client
    may send HTTP POST requests in order to interact with the
    EPCIS repository.
  </description>

  <session-config>
    <!-- Default to 5 minute session timeouts -->
    <session-timeout>5</session-timeout>
  </session-config>

  <!--
    currently the W3C hasn't settled on a media type for WSDL:
    http://www.w3.org/TR/2003/WD-wsdl12-20030303/#ietf-draft
    for now we go with the basic 'it's XML' response
  -->
  <mime-mapping>
    <extension>wsdl</extension>
    <mime-type>text/xml</mime-type>
  </mime-mapping>

  <mime-mapping>
    <extension>xsd</extension>
    <mime-type>text/xml</mime-type>
  </mime-mapping>

  <welcome-file-list id="WelcomeFileList">
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.jws</welcome-file>
  </welcome-file-list>



  <!-- ====================================================================== -->
  <!--                     EPCIS Capture Interface                            -->
  <!-- ====================================================================== -->

  <servlet>
    <servlet-name>EpcisCaptureInterface</servlet-name>
    <description>
      This servlet captures EPCIS events sent by HTTP POST requests. The POST
      parameter name is "event", the data is an XML representation of an
      ObjectEvent, AggregationEvent, QuantityEvent or TransactionEvent.
    </description>
    <servlet-class>org.accada.epcis.repository.EpcisCaptureInterface</servlet-class>
  </servlet>


  <!--
    the servlet will be available at the following URL:
    http://localhost:8080/{context-path}/capture
  -->
  <servlet-mapping>
    <servlet-name>EpcisCaptureInterface</servlet-name>
    <url-pattern>/capture</url-pattern>
  </servlet-mapping>



  <!-- ====================================================================== -->
  <!--                     EPCIS Query Interface                              -->
  <!-- ====================================================================== -->

  <servlet>
    <servlet-name>EpcisQueryInterface</servlet-name>
    <description>
      This servlet listens for EPCIS queries sent by HTTP POST requests. The
      request must contain a valid SOAP message with the query beeing in the
      SOAP body.
    </description>
    <servlet-class>org.apache.axis.transport.http.AxisServlet</servlet-class>
  </servlet>


  <!--
    the servlet will be available at the following URL:
    http://localhost:8080/{context-path}/query
  -->
  <servlet-mapping>
    <servlet-name>EpcisQueryInterface</servlet-name>
    <url-pattern>/query/*</url-pattern>
  </servlet-mapping>



  <!-- ====================================================================== -->
  <!--                     Initilization Servlet                              -->
  <!-- ====================================================================== -->

<!--
  <servlet>
    <servlet-name>InitServlet</servlet-name>
    <description>
      This servlet is used for initialization purposes.
    </description>
    <servlet-class>org.accada.epcis.repository.InitServlet</servlet-class>
    <init-param>
      <param-name>log4jConfigFile</param-name>
      <param-value>META-INF/log4j.properties</param-value>
    </init-param>
    <init-param>
      <param-name>propertiesFile</param-name>
      <param-value>META-INF/application.properties</param-value>
    </init-param>
    <load-on-startup>100</load-on-startup>
  </servlet>
-->


  <!-- ====================================================================== -->
  <!--                     Axis Service                                       -->
  <!-- ====================================================================== -->

  <listener>
    <listener-class>org.apache.axis.transport.http.AxisHTTPSessionListener</listener-class>
  </listener>

  <servlet>
    <servlet-name>AxisServlet</servlet-name>
    <display-name>Apache-Axis Servlet</display-name>
    <servlet-class>
      org.apache.axis.transport.http.AxisServlet
    </servlet-class>
  </servlet>

  <servlet>
    <servlet-name>AdminServlet</servlet-name>
    <display-name>Axis Admin Servlet</display-name>
    <servlet-class>
      org.apache.axis.transport.http.AdminServlet
    </servlet-class>
    <load-on-startup>100</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>SOAPMonitorService</servlet-name>
    <display-name>SOAPMonitorService</display-name>
    <servlet-class>
      org.apache.axis.monitor.SOAPMonitorService
    </servlet-class>
    <init-param>
      <param-name>SOAPMonitorPort</param-name>
      <param-value>5001</param-value>
    </init-param>
    <load-on-startup>100</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>AxisServlet</servlet-name>
    <url-pattern>/servlet/AxisServlet</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>AxisServlet</servlet-name>
    <url-pattern>*.jws</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>AxisServlet</servlet-name>
    <url-pattern>/services/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>SOAPMonitorService</servlet-name>
    <url-pattern>/SOAPMonitor</url-pattern>
  </servlet-mapping>

  <!-- uncomment this if you want the admin servlet -->
  <!--
  <servlet-mapping>
    <servlet-name>AdminServlet</servlet-name>
    <url-pattern>/servlet/AdminServlet</url-pattern>
  </servlet-mapping>
  -->



</web-app>
