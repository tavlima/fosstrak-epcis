<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!-- =========================================================== -->
  <!-- Basics                                                      -->
  <!-- =========================================================== -->

  <groupId>org.accada.epcis</groupId>
  <artifactId>epcis-repository</artifactId>
  <version>0.2.0-SNAPSHOT</version>
  <parent>
    <artifactId>epcis</artifactId>
    <groupId>org.accada.epcis</groupId>
    <version>0.2.0-SNAPSHOT</version>
  </parent>
  <packaging>war</packaging>
  <modelVersion>4.0.0</modelVersion>
  <name>epcis-repository</name>


  <!-- =========================================================== -->
  <!-- Properties                                                  -->
  <!-- =========================================================== -->

  <properties>
    <package.structure.soapapi>org.accada.epcis.soapapi</package.structure.soapapi>
    <package.structure.repository>org.accada.epcis.repository</package.structure.repository>
    <directory.structure.soapapi>org/accada/epcis/soapapi</directory.structure.soapapi>
  </properties>


  <!-- =========================================================== -->
  <!-- Dependencies                                                -->
  <!-- =========================================================== -->

  <dependencies>
    <dependency>
      <groupId>org.accada.epcis</groupId>
      <artifactId>epcis-commons</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.axis</groupId>
      <artifactId>axis</artifactId>
      <version>1.4</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.axis</groupId>
      <artifactId>axis-jaxrpc</artifactId>
      <version>1.4</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.axis</groupId>
      <artifactId>axis-saaj</artifactId>
      <version>1.4</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>axis</groupId>
      <artifactId>axis-wsdl4j</artifactId>
      <version>1.5.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-discovery</groupId>
      <artifactId>commons-discovery</artifactId>
      <version>0.4</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>1.4</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>activation</artifactId>
      <version>1.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.12</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>


  <!-- =========================================================== -->
  <!-- Build settings                                              -->
  <!-- =========================================================== -->

  <build>
    <plugins>

<!--
  the following plugin allows the generation of axis classes.
  we currently do not need this plugin!
  
  see http://wiki.apache.org/ws/FrontPage/Axis/MavenIntegration
  for more information on Axis integration.
-->
<!--
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>wsdl2java</id>
            <phase>generate-sources</phase>
            <configuration>
              <tasks>
                <mkdir dir="target/generated-sources/main/java" />
                <taskdef
                  resource="axis-tasks.properties"
                  classpathref="maven.compile.classpath" />
                <axis-wsdl2java
                  output="target/generated-sources/main/java"
                  deployScope="Application" serverSide="true"
                  skeletonDeploy="true" verbose="false"
                  url="src/main/wsdl/EPCglobal-epcis-query-1_0.wsdl">
                  <mapping
                    namespace="urn:epcglobal:epcis:wsdl:1"
                    package="${package.structure.soapapi}" />
                  <mapping
                    namespace="urn:epcglobal:xsd:1"
                    package="${package.structure.soapapi}" />
                  <mapping
                    namespace="urn:epcglobal:epcis:xsd:1"
                    package="${package.structure.soapapi}" />
                  <mapping
                    namespace="urn:epcglobal:epcis-masterdata:xsd:1"
                    package="${package.structure.soapapi}" />
                  <mapping
                    namespace="urn:epcglobal:epcis-query:xsd:1"
                    package="${package.structure.soapapi}" />
                  <mapping
                    namespace="http://www.unece.org/cefact/namespaces/StandardBusinessDocumentHeader"
                    package="${package.structure.soapapi}" />
                </axis-wsdl2java>
-->
                <!--
                  delete Axis-generated server side implementation of
                  BusinessTransactionType.java. We provide our own
                  implementation in src/main/java.
                -->
<!--
                <delete file="target/generated-sources/main/java/${directory.structure.soapapi}/BusinessTransactionType.java" />
-->
                <!--
                  tie EPCISServiceBindingSkeleton to our existing
                  QueryOperationsModule implementation and delete
                  unneeded class.
                -->
<!--
                <replace
                  file="target/generated-sources/main/java/${directory.structure.soapapi}/EPCISServiceBindingSkeleton.java"
                  token="new ${package.structure.soapapi}.EPCISServiceBindingImpl"
                  value="new ${package.structure.repository}.QueryOperationsModule"
                  summary="true" />
                <delete file="target/generated-sources/main/java/${directory.structure.soapapi}/EPCISServiceBindingImpl.java"/>
              </tasks>
              <sourceRoot>target/generated-sources/main/java</sourceRoot>
              <testSourceRoot>target/generated-sources/test/java</testSourceRoot>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

        </executions>
      </plugin>
-->
<!--
  current version of plugin does not meet all of our requirements.
  reconsider replacing ant with axistools-maven-plugin at a later time.
-->
<!--
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>axistools-maven-plugin</artifactId>
        <version>1.1-SNAPSHOT</version>
        <configuration>
          <packageSpace>${package.structure.soapapi}</packageSpace>
          <serverSide>true</serverSide>
          <skeletonDeploy>true</skeletonDeploy>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>wsdl2java</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
-->

      <!--
        the tomcat-maven-plugin used to deploy the application to tomcat.
        this requires a corresponding server block in your settings.xml
        stating username and password for the tomcat-manager application.
      -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <version>1.0-SNAPSHOT</version>
        <configuration>
          <server>tomcat-manager</server>
          <url>http://localhost:8080/manager</url>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/bin-with-dependencies.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>


  <!-- =========================================================== -->
  <!-- Reporting                                                   -->
  <!-- =========================================================== -->
  
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.0</version>
        <configuration>
          <includes>**/*.java</includes>
          <excludes>org/accada/epcis/soapapi/*.*</excludes>
          <configLocation>${basedir}/../src/config/epcis_checks.xml</configLocation>
          <headerLocation>${basedir}/../src/config/HEADER.txt</headerLocation>
          <enableRulesSummary>false</enableRulesSummary>
          <xrefLocation>../xref</xrefLocation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>


  <!-- =========================================================== -->
  <!-- Repositories                                                -->
  <!-- =========================================================== -->

  <!--
    the tomcat-maven-plugin is not in maven's core set of plugins.
    therefore we need to tell maven to look into the mojo sandbox
    repository where the plugin resides
  -->
  <repositories>
    <repository>
      <id>Maven Snapshots</id>
      <url>http://snapshots.maven.codehaus.org/maven2/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>Maven Snapshots</id>
      <url>http://snapshots.maven.codehaus.org/maven2/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
  </pluginRepositories>

</project>