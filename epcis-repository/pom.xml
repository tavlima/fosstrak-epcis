<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!-- =========================================================== -->
  <!-- Basics                                                      -->
  <!-- =========================================================== -->

  <groupId>org.accada.epcis</groupId>
  <artifactId>epcis-repository</artifactId>
  <version>0.2.4-SNAPSHOT</version>
  <parent>
    <artifactId>epcis</artifactId>
    <groupId>org.accada.epcis</groupId>
    <version>0.2.4-SNAPSHOT</version>
  </parent>
  <packaging>war</packaging>
  <modelVersion>4.0.0</modelVersion>
  <name>epcis-repository</name>


  <!-- =========================================================== -->
  <!-- Dependencies                                                -->
  <!-- =========================================================== -->

  <dependencies>
    <dependency>
      <groupId>org.accada.epcis</groupId>
      <artifactId>epcis-commons</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.14</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate</artifactId>
      <version>3.2.5.ga</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>[3.8,4)</version>
      <scope>test</scope>
    </dependency>
  </dependencies>


  <!-- =========================================================== -->
  <!-- Build settings                                              -->
  <!-- =========================================================== -->

  <build>
    <resources>
      <resource>
        <directory>src/main/webapp</directory>
        <filtering>true</filtering>
        <targetPath>../webapp-filtered</targetPath>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <warSourceDirectory>${project.build.directory}/webapp-filtered</warSourceDirectory>
        </configuration>
      </plugin>
      <plugin>
        <!--
          The tomcat-maven-plugin is used to deploy the application to Tomcat
          using the Tomcat Manager. The login credentials for the Manager
          application must be specified in a corresponding server block in your
          settings.xml (http://maven.apache.org/settings.html#Servers), e.g.
            <server>
              <id>tomcat-manager</id>
              <username>admin</username>
              <password></password>
            </server>
        -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <version>1.0-alpha-1</version>
        <configuration>
          <server>tomcat-manager</server>
          <url>http://localhost:8080/manager</url>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/bin-with-dependencies.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>


  <!-- =========================================================== -->
  <!-- Reporting                                                   -->
  <!-- =========================================================== -->
  
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <includes>**/*.java</includes>
          <excludes>org/accada/epcis/soapapi/*.*</excludes>
          <configLocation>${basedir}/../src/config/epcis_checks.xml</configLocation>
          <enableRulesSummary>false</enableRulesSummary>
          <xrefLocation>xref</xrefLocation>
          <propertyExpansion>samedir=${basedir}/../src/config</propertyExpansion>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>


  <!-- =========================================================== -->
  <!-- Repositories                                                -->
  <!-- =========================================================== -->

  <repositories>
    <!--
      JARs provided by Sun fall under Sun's Binary License which disallows
      them from being distributed from Maven's central repository. Therefore
      we need to specify where such libraries (e.g. JTA) can be downloaded.
    -->
    <repository>
      <id>sun</id>
      <name>Sun Maven 2 Repository</name>
      <url>http://download.java.net/maven/2</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <!--
      For Maven plugins provided by Codehaus which are not yet in Maven's core
      set of plugins, e.g. tomcat-maven-plugin
    -->
    <pluginRepository>
      <id>Codehaus Maven Repository</id>
      <url>http://maven.codehaus.org/maven2/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </pluginRepository>
  </pluginRepositories>

</project>
