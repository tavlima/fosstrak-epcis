<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!-- =========================================================== -->
  <!-- Basics                                                      -->
  <!-- =========================================================== -->

  <groupId>org.accada.epcis</groupId>
  <artifactId>epcis-interop-test</artifactId>
  <version>0.3.3-SNAPSHOT</version>
  <parent>
    <artifactId>epcis</artifactId>
    <groupId>org.accada.epcis</groupId>
    <version>0.3.3-SNAPSHOT</version>
  </parent>
  <packaging>pom</packaging>
  <modelVersion>4.0.0</modelVersion>
  <name>epcis-interop-test</name>


  <!-- =========================================================== -->
  <!-- Dependencies                                                -->
  <!-- =========================================================== -->

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>[3.8,4)</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
      <version>1.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!--
          we need this dependency because it will be deployed by
          the cargo plugin
      -->
      <groupId>org.accada.epcis</groupId>
      <artifactId>epcis-repository</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.accada.epcis</groupId>
      <artifactId>epcis-commons</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.accada.epcis</groupId>
      <artifactId>epcis-captureclient</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.accada.epcis</groupId>
      <artifactId>epcis-queryclient</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-core-uberjar</artifactId>
      <version>0.9</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.cargo</groupId>
      <artifactId>cargo-ant</artifactId>
      <version>0.9</version>
      <scope>test</scope>
    </dependency>
  </dependencies>


  <!-- =========================================================== -->
  <!-- Build settings                                              -->
  <!-- =========================================================== -->

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <!--
            the cargo plugin is used to automatically start/stop tomcat and
            to automatically deploy the application
        -->
        <configuration>
          <wait>false</wait>
          <container>
            <containerId>tomcat5x</containerId>
            <home>${CATALINA_HOME}</home>
            <log>${project.build.directory}/interop-test.log</log>
          </container>
          <configuration>
            <home>${project.build.directory}/tomcat</home>
          </configuration>
        </configuration>
        <executions>
          <execution>
            <id>start-container</id>
            <!-- start container and deploy before tests are run -->
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
              <goal>deploy</goal>
            </goals>
            <configuration>
              <deployer>
                <deployables>
                  <deployable>
                    <groupId>org.accada.epcis</groupId>
                    <artifactId>epcis-repository</artifactId>
                    <type>war</type>
                    <pingURL>http://localhost:8080/epcis-repository-${project.version}/capture</pingURL>
                  </deployable>
                </deployables>
              </deployer>
            </configuration>
          </execution>
          <execution>
            <id>stop-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>dbunit-maven-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.0.5</version>
          </dependency>
        </dependencies>
        <configuration>
          <driver>com.mysql.jdbc.Driver</driver>
          <url>jdbc:mysql://localhost:3306/${db.database}?autoReconnect=true</url>
          <username>${db.username}</username>
          <password>${db.password}</password>
        </configuration>
        <executions>
          <execution>
            <id>init-db</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>export</goal>
              <goal>operation</goal>
            </goals>
            <configuration>
              <type>CLEAN_INSERT</type>
              <src>${basedir}/src/test/dbunit/epcis_test_data.xml</src>
              <format>xml</format>
              <dest>${project.build.directory}/dbunit/backup.xml</dest>
            </configuration>
          </execution>
          <execution>
            <id>reset-db</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>operation</goal>
            </goals>
            <configuration>
              <type>CLEAN_INSERT</type>
              <src>${project.build.directory}/dbunit/backup.xml</src>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <!-- run tests as integration-tests -->
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>


  <!-- =========================================================== -->
  <!-- Reporting                                                   -->
  <!-- =========================================================== -->
  
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <includes>**/*.java</includes>
          <excludes>org/accada/epcis/soapapi/*.*</excludes>
          <configLocation>${basedir}/../src/config/epcis_checks.xml</configLocation>
          <enableRulesSummary>false</enableRulesSummary>
          <xrefLocation>xref-test</xrefLocation>
          <propertyExpansion>samedir=${basedir}/../src/config</propertyExpansion>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>dependencies</report>
              <report>summary</report>
              <report>index</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

</project>